############################################################
#   Custom Logging Configuration File
#
# You can use this file by specifying its filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#   Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= CONFIG

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

java.util.logging.SimpleFormatter.format=%4$s: %5$s%n

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################


###-------------------------------------------------------------------------------------------------
###
###  Set vZome logging properties here
###
###-------------------------------------------------------------------------------------------------

# Limit the message that are printed on the console to INFO and above.
# java.util.logging.ConsoleHandler.level = FINE
# Limit the message that are printed on the console to FINE and above.
 java.util.logging.ConsoleHandler.level = INFO
 java.util.logging.FileHandler.level = FINER

## To see edit commands as they are read from history, and then redone, uncomment,
# and set java.util.logging.ConsoleHandler.level above to FINE
#
#org.vorthmann.zome.controller.level = FINER

#org.vorthmann.zome.ui.ApplicationUI.level = FINE
 
 
#org.vorthmann.zome.ui.level = FINEST
#   com.vzome.core.commands.XmlSaveFormat.level = FINER

#com.vzome.core.editor.Breakpoint = INFO


# for manifestation adds and removes
    com.vzome.core.model.level = FINER

    com.vzome.core.4d.level = FINER
    com.vzome.core.editor.CommandEdit.level = FINER

# for command XML on redo
    com.vzome.core.EditHistory.level = FINER
    com.vzome.core.bug.accommodations.level = FINER

    com.vzome.core.editor.CommandEdit.loadAndPerform.level = FINEST

    com.vzome.core.editor.selection.level = FINER

#com.vzome.core.commands.importVEF.level = FINEST

#com.vzome.core.construction.VefToModel.level = FINEST

#com.vzome.core.symmetry.controller.level = FINE

#com.vzome.core.snapshots.level = FINER
#com.vzome.core.thumbnails.level = FINER

#com.vzome.render.java3d.level = FINEST


